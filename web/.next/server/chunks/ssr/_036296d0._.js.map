{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Documents/Running%20Projects/ZenoVerse/web/components/ConnectWalletButton.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { accountContext } from \"@/context/accountContext\";\r\n\r\nfunction ConnectWalletButton() {\r\n  // Get account state and setter from context\r\n  const { account, setAccount } = useContext(accountContext);\r\n\r\n  // Handle initial wallet connection\r\n  const connectWallet = async () => {\r\n    try {\r\n      // Check if MetaMask is installed\r\n      if (!window.ethereum) {\r\n        alert(\"Please install MetaMask to use this app.\");\r\n        return;\r\n      }\r\n\r\n      // Request access to user's MetaMask accounts\r\n      const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      // Validate that we got at least one account\r\n      if (accounts.length === 0) {\r\n        console.log(\"No accounts found\");\r\n        return;\r\n      }\r\n      setAccount(accounts[0]);\r\n    } catch (error) {\r\n      console.error(\"Error connecting wallet:\", error);\r\n    }\r\n  };\r\n\r\n  // Open MetaMask account selector for switching accounts\r\n  const switchAccount = async () => {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: \"wallet_requestPermissions\",\r\n        params: [{ eth_accounts: {} }],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error switching accounts:\", error);\r\n    }\r\n  };\r\n\r\n  // Format account address for display (0x1234...5678)\r\n  const truncateAccount = (account) => {\r\n    return `${account.slice(0, 6)}...${account.slice(-4)}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-2 items-center\">\r\n      {account ? (\r\n        <>\r\n          <span className=\"font-mono bg-gray-100 px-3 py-1 rounded\">\r\n            Connected to: {truncateAccount(account)}\r\n          </span>\r\n          <button\r\n            onClick={switchAccount}\r\n            className=\"bg-[#7407b8b9] hover:bg-[#7407b8] text-white px-4 py-1 rounded transition-colors\"\r\n          > \r\n            Switch\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <button\r\n          onClick={connectWallet}\r\n          className=\"bg-[#7407b8b9] hover:bg-[#7407b8] text-white px-4 py-1 rounded transition-colors\"\r\n        >\r\n          Connect Wallet\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectWalletButton;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,SAAS;IACP,4CAA4C;IAC5C,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,0HAAA,CAAA,iBAAc;IAEzD,mCAAmC;IACnC,MAAM,gBAAgB;QACpB,IAAI;YACF,iCAAiC;YACjC,IAAI,CAAC,OAAO,QAAQ,EAAE;gBACpB,MAAM;gBACN;YACF;YAEA,6CAA6C;YAC7C,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;gBAC7C,QAAQ;YACV;YAEA,4CAA4C;YAC5C,IAAI,SAAS,MAAM,KAAK,GAAG;gBACzB,QAAQ,GAAG,CAAC;gBACZ;YACF;YACA,WAAW,QAAQ,CAAC,EAAE;QACxB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;IACF;IAEA,wDAAwD;IACxD,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;gBAC5B,QAAQ;gBACR,QAAQ;oBAAC;wBAAE,cAAc,CAAC;oBAAE;iBAAE;YAChC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,qDAAqD;IACrD,MAAM,kBAAkB,CAAC;QACvB,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IACxD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,wBACC;;8BACE,8OAAC;oBAAK,WAAU;;wBAA0C;wBACzC,gBAAgB;;;;;;;8BAEjC,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;yCAKH,8OAAC;YACC,SAAS;YACT,WAAU;sBACX;;;;;;;;;;;AAMT;uCAEe","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///C:/Documents/Running%20Projects/ZenoVerse/web/components/Navbar.jsx"],"sourcesContent":["\"use client\";\r\nimport React from 'react'\r\nimport ConnectWalletButton from './ConnectWalletButton';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    //The person working on navbar can make the necessary changes here just place the component ConnectWalletButton where you want the button\r\n    <div className=\"flex justify-end items-center p-4\">\r\n        <ConnectWalletButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,MAAM,SAAS;IACb,OACE,yIAAyI;kBACzI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,iIAAA,CAAA,UAAmB;;;;;;;;;;AAG5B;uCAEe","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///C:/Documents/Running%20Projects/ZenoVerse/web/app/page.jsx"],"sourcesContent":["\"use client\";\r\nimport { accountContext } from \"@/context/accountContext\";\r\nimport Navbar from \"@/components/Navbar\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nexport default function Home() {\r\n  // Get wallet and contract state from context\r\n  const { account, setAccount, contract, setContract } =\r\n    useContext(accountContext);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if MetaMask is installed\r\n  useEffect(() => {\r\n    if (!window.ethereum) {\r\n      alert(\"Please install MetaMask to use this app.\");\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  // Auto-connect to previously connected wallet on page load\r\n  useEffect(() => {\r\n    const autoConnect = async () => {\r\n      setLoading(true);\r\n      if (window.ethereum) {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_accounts\",\r\n        });\r\n        if (accounts.length > 0) {\r\n          setAccount(accounts[0]);\r\n          // Initialize contract instance when needed\r\n          // const contractInstance = await initialize_contract();\r\n          // setContract(contractInstance);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    autoConnect();\r\n  }, []);\r\n\r\n  // Listen for account changes in MetaMask\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      const handleAccountsChanged = (accounts) => {\r\n        setAccount(accounts[0] || null);\r\n      };\r\n      window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\r\n      \r\n      // Cleanup listener on component unmount\r\n      return () => {\r\n        window.ethereum.removeListener(\r\n          \"accountsChanged\",\r\n          handleAccountsChanged\r\n        );\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  if(loading)\r\n    return <div>Loading ...</div>\r\n  \r\n  return (\r\n    <>\r\n      <Navbar />\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKe,SAAS;IACtB,6CAA6C;IAC7C,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,GAClD,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,0HAAA,CAAA,iBAAc;IAC3B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,iCAAiC;IACjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO,QAAQ,EAAE;YACpB,MAAM;YACN;QACF;IACF,GAAG,EAAE;IAEL,2DAA2D;IAC3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,WAAW;YACX,IAAI,OAAO,QAAQ,EAAE;gBACnB,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;oBAC7C,QAAQ;gBACV;gBACA,IAAI,SAAS,MAAM,GAAG,GAAG;oBACvB,WAAW,QAAQ,CAAC,EAAE;gBACtB,2CAA2C;gBAC3C,wDAAwD;gBACxD,iCAAiC;gBACnC;YACF;YACA,WAAW;QACb;QACA;IACF,GAAG,EAAE;IAEL,yCAAyC;IACzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,OAAO,QAAQ,EAAE;YACnB,MAAM,wBAAwB,CAAC;gBAC7B,WAAW,QAAQ,CAAC,EAAE,IAAI;YAC5B;YACA,OAAO,QAAQ,CAAC,EAAE,CAAC,mBAAmB;YAEtC,wCAAwC;YACxC,OAAO;gBACL,OAAO,QAAQ,CAAC,cAAc,CAC5B,mBACA;YAEJ;QACF;IACF,GAAG,EAAE;IAEL,IAAG,SACD,qBAAO,8OAAC;kBAAI;;;;;;IAEd,qBACE;kBACE,cAAA,8OAAC,qHAAA,CAAA,UAAM;;;;;;AAGb","debugId":null}}]
}